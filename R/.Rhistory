load("C:/Users/pc/Desktop/PoisMS/data/H.rda")
View(H)
View(H)
W <- function(r){
if (abs(r) <= 1) return((1-abs(r)^3)^3)
else return(0)
}
W <- function(r){
if (abs(r) <= 1) return((1-abs(r)^3)^3)
else return(0)
}
llr <- function(x, y, x0, span, hat = FALSE) {
n <- length(y)
X <- cbind(rep(1, length = n), x)
# compute the bandwidth
k <- floor(span * n)
dist <- abs(x - x0)
w <- dist[order(dist)[k]]
# compute the weight
weight <- rep(0, length = n)
for (i in 1:n){
weight[i] <- W(dist[i]/w)
}
W0 <- diag(weight)
#fit regression
h <- W0 %*% X %*% solve(t(X) %*% W0 %*% X) %*% rbind(1, x0)
fit <- t(h) %*% y
if (hat == TRUE){
return(list(fit = fit, weight = weight, hat = h))
}
else{
return(fit)
}
}
lpros <- read.table("lprostate.dat", head = TRUE)
lpros <- lpros[, -1]
attach(lpros)
name <- colnames(lpros)
lpros <- read.table("lprostate.dat", head = TRUE)
lpros <- lpros[, -1]
attach(lpros)
name <- colnames(lpros)
lpros <- read.table("lprostate.dat", head = TRUE)
lpros <- lpros[, -1]
attach(lpros)
name <- colnames(lpros)
lpros <- read.table("lprostate.dat", head = TRUE)
lpros <- lpros[, -1]
name <- colnames(lpros)
x0.range <- seq(3, 100, by = 0.2)
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
plot(pgg45, lpsa)
lines(x0.range, fit)
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
plot(pgg45, lpsa)
lines(x0.range, fit)
span.range <- seq(0.2, 1, by = 0.2)
plot(pgg45, lpsa)
j = 1
for (span in span.range) {
fit <- c()
for (x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
lines(x0.range, fit, col = j)
j = j + 1
}
legend("topright", as.character(span.range), col = c(1 : (j-1)), lty = rep(1, j-1))
span.range <- seq(0.2, 1, by = 0.2)
plot(pgg45, lpsa)
j = 1
for (span in span.range) {
fit <- c()
for (x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
lines(x0.range, fit, col = j)
j = j + 1
}
legend("topright", as.character(span.range), col = c(1 : (j-1)), lty = rep(1, j-1))
span.range <- seq(0.2, 1, by = 0.2)
plot(pgg45, lpsa)
j = 1
for (span in span.range) {
fit <- c()
for (x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
lines(x0.range, fit, col = j)
j = j + 1
}
legend("topright", as.character(span.range), col = c(1:(j - 1)), lty = rep(1, j - 1))
set.seed(1)
x0.range <- c(runif(2, start, end), 0.95 * end + 0.05 * start)
W <- function(r){
if (abs(r) <= 1) return((1-abs(r)^3)^3)
else return(0)
}
llr <- function(x, y, x0, span, hat = FALSE) {
n <- length(y)
X <- cbind(rep(1, length = n), x)
# compute the bandwidth
k <- floor(span * n)
dist <- abs(x - x0)
w <- dist[order(dist)[k]]
# compute the weight
weight <- rep(0, length = n)
for(i in 1:n){
weight[i] <- W(dist[i]/w)
}
W0 <- diag(weight)
#fit regression
h <- W0 %*% X %*% solve(t(X) %*% W0 %*% X) %*% rbind(1, x0)
fit <- t(h) %*% y
if(hat == TRUE){
return(list(fit = fit, weight = weight, hat = h))
}
else{
return(fit)
}
}
lpros <- read.table("lprostate.dat", head = TRUE)
lpros <- lpros[, -1]
name <- colnames(lpros)
x0.range <- seq(3, 100, by = 0.2)
start = 3
end = 100
m = 100
x0.range <- seq(start, end, by = (end - start)/m)
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
plot(pgg45, lpsa)
lines(x0.range, fit)
span.range <- seq(0.2, 1, by = 0.2)
plot(pgg45, lpsa)
j = 1
for (span in span.range) {
fit <- c()
for (x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
lines(x0.range, fit, col = j)
j = j + 1
}
legend("topright", as.character(span.range), col = c(1:(j - 1)), lty = rep(1, j - 1))
set.seed(1)
x0.range <- c(runif(2, start, end), 0.95 * end + 0.05 * start)
span <- 1/4
n <- length(lpsa)
par(mfrow = c(3, 1))
for (x0 in x0.range){
res <- llr(pgg45, lpsa, x0, span, hat = TRUE)
plot(pgg45, res$weight, ylab = "weight(black), hat(red)",
main = paste("x0 = ", round(x0, 3)))
points(pgg45, res$hat, pch = 18, col = 2)
}
set.seed(1)
x0.range <- c(runif(2, start, end), 0.95 * end + 0.05 * start)
span <- 1/4
n <- length(lpsa)
par(mfrow = c(3, 1))
for (x0 in x0.range){
res <- llr(pgg45, lpsa, x0, span, hat = TRUE)
plot(pgg45, res$weight, ylab = "weight(black), hat(red)",
main = paste("x0 = ", round(x0, 3)))
points(pgg45, res$hat, pch = 18, col = 2)
}
#ii <- order(lweight)
#lweight <- lweight[ii]
#lpsa <- lpsa[ii]
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
llr.fit <- function(x, y, span, hat = FALSE)  {
H <- sapply(x, function(x0) llr(x, y, x0, span, hat = TRUE)$h)
H <- t(H)
fits <- H %*% y
n <- length(y)
df <- sum(diag(H))
#estimator for sigma^2
var.err <- sum((y - fits)^2)/(n - 2 * df + sum(diag(H %*% H)))
#variance of fits
se.fits <- sqrt(var.err * diag(H %*% t(H)))
out <- list(fits = fits, df = df, var.err = var.err, se.fits = se.fits)
if(hat) out <- c(out, list(H = H))
return(out)
}
#ii <- order(lweight)
#lweight <- lweight[ii]
#lpsa <- lpsa[ii]
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
start = 3
end = 100
m = 100
x0.range <- seq(start, end, by = (end - start)/m)
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
plot(pgg45, lpsa)
lines(x0.range, fit)
span.range <- seq(0.2, 1, by = 0.2)
plot(pgg45, lpsa)
j = 1
for (span in span.range) {
fit <- c()
for (x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
lines(x0.range, fit, col = j)
j = j + 1
}
legend("topright", as.character(span.range), col = c(1:(j - 1)), lty = rep(1, j - 1))
set.seed(1)
x0.points <- c(runif(2, start, end), 0.95 * end + 0.05 * start)
set.seed(1)
x0.points <- c(runif(2, start, end), 0.95 * end + 0.05 * start)
span <- 1/4
n <- length(lpsa)
par(mfrow = c(3, 1))
for (x0 in x0.points){
res <- llr(pgg45, lpsa, x0, span, hat = TRUE)
plot(pgg45, res$weight, ylab = "weight(black), hat(red)",
main = paste("x0 = ", round(x0, 3)))
points(pgg45, res$hat, pch = 18, col = 2)
}
llr.fit <- function(x, y, span, hat = FALSE)  {
H <- sapply(x, function(x0) llr(x, y, x0, span, hat = TRUE)$h)
H <- t(H)
fits <- H %*% y
n <- length(y)
df <- sum(diag(H))
#estimator for sigma^2
var.err <- sum((y - fits)^2)/(n - 2 * df + sum(diag(H %*% H)))
#variance of fits
se.fits <- sqrt(var.err * diag(H %*% t(H)))
out <- list(fits = fits, df = df, var.err = var.err, se.fits = se.fits)
if(hat) out <- c(out, list(H = H))
return(out)
}
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(x0.range, lpsa, 1/3, hat = TRUE)
x0.range
llr.fit <- function(x, y, x0.range, span, hat = FALSE)  {
H <- sapply(x0.range, function(x0) llr(x, y, x0, span, hat = TRUE)$h)
H <- t(H)
fits <- H %*% y
n <- length(y)
df <- sum(diag(H))
#estimator for sigma^2
var.err <- sum((y - fits)^2)/(n - 2 * df + sum(diag(H %*% H)))
#variance of fits
se.fits <- sqrt(var.err * diag(H %*% t(H)))
out <- list(fits = fits, df = df, var.err = var.err, se.fits = se.fits)
if(hat) out <- c(out, list(H = H))
return(out)
}
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(pgg45, lpsa, x0.range, 1/3, hat = TRUE)
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
fit = sapply(x0.range, function(x0) llr(x, y, x0, span, hat = TRUE))
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
fit = sapply(x0.range, function(x0) llr(pgg45, lpsa, x0, span, hat = TRUE))
plot(pgg45, lpsa)
lines(x0.range, fit)
start = 3
end = 100
m = 100
x0.range <- seq(start, end, by = (end - start)/m)
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
fit = sapply(x0.range, function(x0) llr(pgg45, lpsa, x0, span, hat = TRUE))
span <- 1/3
fit <- c()
for(x0 in x0.range){
fit <- rbind(fit, llr(pgg45, lpsa, x0, span))
}
fit = sapply(x0.range, function(x0) llr(pgg45, lpsa, x0, span))
plot(pgg45, lpsa)
lines(x0.range, fit)
span <- 1/3
fit = sapply(x0.range, function(x0) llr(pgg45, lpsa, x0, span))
plot(pgg45, lpsa)
lines(x0.range, fit)
span.range <- seq(0.2, 1, by = 0.2)
plot(pgg45, lpsa)
col = 1
for (span in span.range) {
fit = sapply(x0.range, function(x0) llr(pgg45, lpsa, x0, span))
lines(x0.range, fit, col = col)
col = col + 1
}
legend("topright", as.character(span.range), col = c(1:(j - 1)), lty = rep(1, j - 1))
span.range <- seq(0.2, 1, by = 0.2)
plot(pgg45, lpsa)
col = 1
for (span in span.range) {
fit = sapply(x0.range, function(x0) llr(pgg45, lpsa, x0, span))
lines(x0.range, fit, col = col)
col = col + 1
}
legend("topright", as.character(span.range), col = c(1:(col - 1)), lty = rep(1, col - 1))
llr.fit <- function(x, y, span, hat = FALSE)  {
H <- sapply(x, function(x0) llr(x, y, x0, span, hat = TRUE)$h)
H <- t(H)
fits <- H %*% y
n <- length(y)
df <- sum(diag(H))
#estimator for sigma^2
var.err <- sum((y - fits)^2)/(n - 2 * df + sum(diag(H %*% H)))
#variance of fits
se.fits <- sqrt(var.err * diag(H %*% t(H)))
out <- list(fits = fits, df = df, var.err = var.err, se.fits = se.fits)
if(hat) out <- c(out, list(H = H))
return(out)
}
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(pgg45, lpsa, x0.range, 1/3, hat = TRUE)
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
llr(pgg45, lpsa, pgg45[1], span = 1/2, hat = TRUE)
llr(pgg45, lpsa, 2.5, span = 1/2, hat = TRUE)
llr(pgg45, lpsa, pgg45, span = 1/2, hat = TRUE)
for(x0 in pgg45) llr(pgg45, lpsa, x0, span = 1/2, hat = TRUE)
for(x0 in pgg45) llr(pgg45, lpsa, x0, span = 1/3, hat = TRUE)
llr(pgg45, lpsa, 2.5, span = 1/3, hat = TRUE)
llr(pgg45, lpsa, 3, span = 1/3, hat = TRUE)
llr.fit <- function(x, y, span, hat = FALSE)  {
H <- sapply(x[x > start & x < end], function(x0) llr(x, y, x0, span, hat = TRUE)$h)
H <- t(H)
fits <- H %*% y
n <- length(y)
df <- sum(diag(H))
#estimator for sigma^2
var.err <- sum((y - fits)^2)/(n - 2 * df + sum(diag(H %*% H)))
#variance of fits
se.fits <- sqrt(var.err * diag(H %*% t(H)))
out <- list(fits = fits, df = df, var.err = var.err, se.fits = se.fits)
if(hat) out <- c(out, list(H = H))
return(out)
}
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
pgg45[pgg45>3]
llr.fit <- function(x, y, span, hat = FALSE)  {
x.range <- x[x > start & x < end]
H <- sapply(x.range, function(x0) llr(x, y, x0, span, hat = TRUE)$h)
H <- t(H)
fits <- H %*% y
n <- length(y)
df <- sum(diag(H))
#estimator for sigma^2
var.err <- sum((y - fits)^2)/(n - 2 * df + sum(diag(H %*% H)))
#variance of fits
se.fits <- sqrt(var.err * diag(H %*% t(H)))
out <- list(fits = fits, df = df, var.err = var.err, se.fits = se.fits)
if(hat) out <- c(out, list(H = H))
return(out)
}
index <- order(pgg45)
pgg45 <- pgg45[index]
lpsa <- lpsa[index]
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
lpsa.fit <- llr.fit(pgg45, lpsa, 1/3, hat = TRUE)
llr(pgg45, lpsa, 1/3, hat = TRUE)
