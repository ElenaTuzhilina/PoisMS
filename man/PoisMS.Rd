% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PoisMS.R
\name{PoisMS}
\alias{PoisMS}
\title{Poisson Metric Scaling}
\usage{
PoisMS(
  C,
  H,
  beta0 = max(log(C)),
  Theta0 = matrix(rnorm(ncol(H) * 3), ncol(H), 3),
  update_beta = TRUE,
  eps_wpcms = 1e-06,
  maxiter = 100,
  verbose_wpcms = FALSE,
  eps_poisms = 1e-06,
  maxepoch = 100,
  verbose_poisms = FALSE
)
}
\arguments{
\item{C}{a square symmetric matrix representing a Hi-C contact matrix.}

\item{H}{a spline basis matrix. By default assumed to have orthogonal columns. If not, orthogonalization should be done via QR decomposition.}

\item{beta0}{an initialization for intercept \eqn{beta}. By default \code{beta0 = max(log(C))}.}

\item{Theta0}{an initialization for spline basis coefficient matrix \eqn{Theta}. By defaul \code{Theta0 = matrix(rnorm(ncol(H) * 3), ncol(H), 3)}, i.e. a random initialization is considered.}

\item{update_beta}{If \code{update_beta = TRUE}, then the algorithm finds an optimal intercept value. If \code{update_beta = TRUE}, then the intercept is considered to be fixed and set to \code{beta0}.}

\item{eps_wpcms, eps_poisms}{positive convergence tolerances for WPCMS inner loop and PoisMS outer loop.}

\item{maxiter, maxepoch}{integers giving the maximal numbers of iterations for WPCMS inner loop and PoisMS outer loop.}

\item{verbose_wpcms, verbose_poisms}{logical. If \code{TRUE}, the WPCMS loss after each iteration of inner loop and PoisMS loss after each epoch of outer loop are printed.}
}
\value{
A list containing the PoisMS problem solution:
\itemize{
  \item \code{Theta} -- the matrix of spline parameters.
  \item \code{X} -- the resulting conformation reconstruction.
  \item \code{beta} -- the resulting intercept value.
  \item \code{loss} -- the resulting value of the PoisMS loss.
  \item \code{epoch} -- the total number of epochs.
  \item \code{iter_total} -- the total number of iterations.
  \item \code{plot} -- the list of PoisMS plots: 'loss' corresponds to loss vs. epoch plot, 'intercept' represents beta vs. epoch plot.
}
}
\description{
PoisMS function calculates the Poisson Metric Scaling solution for a contact matrix \eqn{C} and a spline basis matrix \eqn{H}.
The optimal solution is found via minimizing the negative log-likelihood for the Poisson probabilistic model \eqn{C~Pois(\Lambda)} with \deqn{\log(\Lambda) = -D^2(X) + \beta}{log(\Lambda) = -D^2(X) + \beta} w.r.t. \eqn{\Theta} subject to the smooth curve constraint \eqn{X = H\Theta}.
Here \eqn{D(X)} refers to the matrix of pairwise distances.
The solution can be calculated via iterating the second order approximation of the objective (outer PoisMS loop) and applying WPCMS to optimize the obtained quadratic approximation (inner WPCMS loop).
The spatial coordiantes of the resulting reconstruction are presented in \eqn{X}.
}
\examples{
data(C)

#create spline basis matrix
H = splines::bs(1:ncol(C), df = 5)

#orthogonalize H using QR decomposition
H = qr.Q(qr(H))

#run PoisMS approach; fixed intercept
PoisMS(C, H, beta = 10)$X

#run PoisMS approach; optimize intercept
PoisMS(C, H)$X

}
